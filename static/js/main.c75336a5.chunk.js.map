{"version":3,"sources":["components/header.jsx","components/questionAnswer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","QuestionAnswer","data","useState","questAns","setQA","viewResult","setViewResult","result","setResult","showQs","setQs","showAs","setAs","useEffect","Axios","get","then","res","console","log","submitAns","a","b","length","objIndex","findIndex","obj","index","push","submit","alert","post","JSON","parse","getData","forEach","answer","score","total","className","map","item","question","style","type","onChange","e","target","value","firstopt","name","secondopt","thirdopt","onClick","readOnly","correct","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c75336a5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ()=>{\n    return(\n        <div>\n        <h1>Question Answer Section</h1>\n        <h3>Read questions correctly and choose right answer</h3>\n        </div>\n    )\n}\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport './css/qa.css';\nconst QuestionAnswer = () => {\n    let [questAns, setQA] = useState([]);\n    let [viewResult, setViewResult] = useState([]);\n    let [result, setResult] = useState([]);\n    let [showQs,setQs]=useState(\"show\");\n    let [showAs,setAs]=useState(\"hide\");\n    useEffect(() => {\n        // collect question answers\n        Axios.get(('https://question-answer-web.herokuapp.com/api/questions'), {}).then((res) => {\n            console.log(res);\n            setQA(res.data)\n        })\n    }, [])\n    var data;\n    var submitAns = (a, b) => {\n        data = result;\n        if (data.length === questAns.length) {\n            var objIndex = result.findIndex((obj => obj.index == b));\n            result[objIndex].data = a\n        }\n        else {\n            data.push({\n                index: b,\n                data: a\n            })\n        }\n        setResult(data);\n    }\n    var submit = async () => {\n        if (result.length !== questAns.length) alert(\"please answer all questions...\")\n        else {\n            await Axios.post(('https://question-answer-web.herokuapp.com/api/submit'), {result}).then((res) => {\n                console.log(res);\n                data =JSON.parse(res.data[0].getData);\n                data.forEach((obj,index)=>{\n                    obj.answer=result[index].data\n                });\n                console.log(data)\n                setViewResult(data)\n                setQs(\"hide\");setAs(\"show\")\n                alert(`you scored ${res.data[0].score} out of ${res.data[0].total}`);\n            })\n        }\n    }\n    return (\n        <div>\n            <div className={showQs}>\n                {\n                    questAns.map((item, index) => {\n                        return (\n                            <div key={index}>\n                                <h4>{index + 1}. {item.question}</h4>\n                                <h5 style={{ \"marginRight\": \"10px\" }}><input type=\"radio\" onChange={(e) => { submitAns(e.target.value, index) }} value={item.firstopt} name={index} /> {item.firstopt}</h5>\n                                <h5 style={{ \"marginRight\": \"10px\" }}><input type=\"radio\" onChange={(e) => { submitAns(e.target.value, index) }} value={item.secondopt} name={index} /> {item.secondopt}</h5>\n                                <h5 style={{ \"marginRight\": \"10px\" }}><input type=\"radio\" onChange={(e) => { submitAns(e.target.value, index) }} value={item.thirdopt} name={index} /> {item.thirdopt}</h5>\n                                <hr />\n                            </div>\n                        )\n                    })\n                }\n                <button type=\"button\" onClick={() => { submit() }} className=\"btn btn-success\">submit</button>\n            </div>\n            <div className={showAs}>\n                {\n                    viewResult.map((item, index) => {\n                        return (\n                            <div key={index}>\n                                <h4>{index + 1}. {item.question}</h4>\n                                <label>Your Answer :</label>\n                                <h5><input type=\"text\" className=\"textFieldWrong\" value={item.answer} readOnly /> </h5>\n                                <label>Correct Answer :</label>\n                                <h5><input type=\"text\" className=\"textFieldRight\" value={item.correct} readOnly /></h5>\n                                <hr />\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\nexport default QuestionAnswer","import './App.css';\n// import AddQuestions from './components/addQuestions';\nimport Header from './components/header';\nimport QuestionAnswer from './components/questionAnswer';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center\">\n        <Header />\n      </div>\n      {/* <div className=\"d-flex justify-content-center\">\n        <AddQuestions />\n      </div> */}\n      <div className=\"d-flex justify-content-center\">\n        <QuestionAnswer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}